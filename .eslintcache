[{"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\index.js":"1","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\App.js":"2","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\utils\\apolloClient.js":"3","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\containers\\Recipes.js":"4","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\containers\\Recipe.js":"5","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\components\\Nav.js":"6","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\category\\category.js":"7","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\components\\Query.js":"8","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\components\\Recipes.js":"9","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\Queries\\recipes.js":"10","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\Queries\\recipe.js":"11","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\Queries\\category.js":"12","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\Queries\\categories.js":"13","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\components\\Card.js":"14","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\containers\\Signup.js":"15","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\containers\\Login.js":"16","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\containers\\UserInfo.js":"17","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\context\\UserContext.js":"18","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\theme\\light.js":"19","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\theme\\dark.js":"20","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\theme\\component\\Container.js":"21","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\actions\\config_action.js":"22","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\actions\\types.js":"23","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\serviceWorker.js":"24","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\reducers\\index.js":"25","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\reducers\\config_reducer.js":"26","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\containers\\PostRecipe.js":"27"},{"size":1050,"mtime":1611704924252,"results":"28","hashOfConfig":"29"},{"size":1884,"mtime":1611775085768,"results":"30","hashOfConfig":"29"},{"size":364,"mtime":1611690047580,"results":"31","hashOfConfig":"29"},{"size":890,"mtime":1611772501760,"results":"32","hashOfConfig":"29"},{"size":1986,"mtime":1611772562928,"results":"33","hashOfConfig":"29"},{"size":5267,"mtime":1611774980210,"results":"34","hashOfConfig":"29"},{"size":896,"mtime":1611705581756,"results":"35","hashOfConfig":"29"},{"size":388,"mtime":1611456165571,"results":"36","hashOfConfig":"29"},{"size":1004,"mtime":1611773733160,"results":"37","hashOfConfig":"29"},{"size":281,"mtime":1611695311373,"results":"38","hashOfConfig":"29"},{"size":268,"mtime":1611695316950,"results":"39","hashOfConfig":"29"},{"size":280,"mtime":1611603876620,"results":"40","hashOfConfig":"29"},{"size":177,"mtime":1611519428389,"results":"41","hashOfConfig":"29"},{"size":782,"mtime":1611773797245,"results":"42","hashOfConfig":"29"},{"size":4722,"mtime":1611710449149,"results":"43","hashOfConfig":"29"},{"size":3015,"mtime":1611715506755,"results":"44","hashOfConfig":"29"},{"size":600,"mtime":1611710577592,"results":"45","hashOfConfig":"29"},{"size":316,"mtime":1611693709149,"results":"46","hashOfConfig":"29"},{"size":97,"mtime":1611765701473,"results":"47","hashOfConfig":"29"},{"size":97,"mtime":1611772425401,"results":"48","hashOfConfig":"29"},{"size":186,"mtime":1611771752466,"results":"49","hashOfConfig":"29"},{"size":161,"mtime":1611685499000,"results":"50","hashOfConfig":"29"},{"size":37,"mtime":1611705473079,"results":"51","hashOfConfig":"29"},{"size":5196,"mtime":1611685499000,"results":"52","hashOfConfig":"29"},{"size":162,"mtime":1611685499000,"results":"53","hashOfConfig":"29"},{"size":260,"mtime":1611685499000,"results":"54","hashOfConfig":"29"},{"size":4141,"mtime":1611774865714,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"1f2quga",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"59"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"59"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"59"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"59"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\index.js",["120"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport App from \"./App\"\nimport client from \"./utils/apolloClient\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport UserContextProvider from './context/UserContext'\nimport \"./index.css\";\n\nimport Reducer from './reducers'\nimport { Provider } from \"react-redux\"\nimport { createStore, applyMiddleware } from 'redux'\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk'\nimport * as serviceWorker from './serviceWorker';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore)\n\nReactDOM.render(\n  <Router>\n    <Provider store={createStoreWithMiddleware(Reducer, window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION__())} >\n      <ApolloProvider client={client}>\n        <UserContextProvider>\n          <App />\n        </UserContextProvider>\n      </ApolloProvider>\n    </Provider>\n  </Router>,\n\n  document.getElementById(\"root\")\n);",["121","122"],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\App.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\utils\\apolloClient.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\containers\\Recipes.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\containers\\Recipe.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\components\\Nav.js",["123","124"],"import React, { useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from '../context/UserContext'\nimport { darkModeAction } from '../actions/config_action'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport Query from \"./Query\";\nimport CATEGORIES_QUERY from \"../Queries/categories\";\n\nimport Container from '../theme/component/Container'\nimport lightTheme from '../theme/light';\nimport darkTheme from '../theme/dark';\n\nconst Nav = () => {\n\n    const { user, setUser } = useContext(UserContext)\n    const config = useSelector(state => state.config)\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (!config.darkMode) {\n            dispatch(darkModeAction(window.localStorage.getItem('theme')))\n        }\n    }, [config.darkMode, dispatch])\n\n    const themeChange = (value) => {\n        window.localStorage.setItem('theme', value)\n        dispatch(darkModeAction(value))\n    }\n\n    return (\n        <div>\n            <ThemeProvider theme={config.darkMode === \"light\" ? lightTheme : darkTheme}>\n                <Container>\n                    <Query query={CATEGORIES_QUERY} id={null}>\n                        {({ data: { categories } }) => {\n                            return (\n                                <div>\n                                    <nav className=\"uk-navbar-container uk-navbar-transparent\" data-uk-navbar>\n                                        <div className=\"uk-navbar-left\">\n                                            <ul className=\"uk-navbar-nav\">\n                                                <li>\n                                                    <Link to=\"/\">Recipes</Link>\n                                                </li>\n                                                {user &&\n                                                    <li>\n                                                        <Link to=\"/post\">Post</Link>\n                                                    </li>\n                                                }\n                                                {user &&\n                                                    <li>\n                                                        <Link to={`/userinfo/${user.user.id}`}>{user.user.username}</Link>\n                                                    </li>\n                                                }\n                                                {user &&\n                                                    <li>\n                                                        <Link to=\"/login\" onClick={(event) => {\n                                                            setUser(null)\n                                                        }} >Logout</Link>\n\n                                                    </li>\n                                                }\n                                                {!user &&\n                                                    <li>\n                                                        <Link to=\"/login\">Login</Link>\n                                                    </li>\n                                                }\n                                                {!user &&\n                                                    <li>\n                                                        <Link to=\"/signup\">Signup</Link>\n                                                    </li>\n                                                }\n\n                                            </ul>\n                                        </div>\n\n                                        <div className=\"uk-navbar-right\">\n                                            <ul className=\"uk-navbar-nav\">\n                                                {categories.map((category, i) => {\n                                                    return (\n                                                        <li key={category.id}>\n                                                            <Link\n                                                                to={`/categories/${category.id}`}\n                                                                className=\"uk-link-reset\">\n                                                                {category.name}\n                                                            </Link>\n                                                        </li>\n                                                    );\n                                                })}\n                                            </ul>\n                                        </div>\n                                    </nav>\n                                    <ul class=\"uk-subnav uk-margin\" >\n                                        <li><a onClick={() => themeChange('dark')}>Dark Mode</a></li>\n                                        <li><a onClick={() => themeChange('light')}>Light Mode</a></li>\n                                    </ul>\n                                </div>\n                            );\n                        }}\n                    </Query>\n                </Container>\n            </ThemeProvider>\n        </div>\n    );\n};\n\n\n\nexport default Nav;","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\category\\category.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\components\\Query.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\components\\Recipes.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\Queries\\recipes.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\Queries\\recipe.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\Queries\\category.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\Queries\\categories.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\components\\Card.js",["125"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Card = ({ recipe }) => {\r\n\r\n    return (\r\n        <Link to={`/recipes/${recipe.id}`} className=\"uk-link-reset\">\r\n            <div className=\"uk-card uk-card-muted\">\r\n                <div className=\"uk-card-media-top\">\r\n                    <img\r\n                        src={recipe.link}\r\n                        height=\"100\"\r\n\r\n                    />\r\n                </div>\r\n                <div className=\"uk-card-body\">\r\n                    <p id=\"category\" className=\"uk-text-uppercase uk-text-large\">\r\n                        {recipe.title}\r\n                    </p>\r\n                    {recipe.views}\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default Card;","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\containers\\Signup.js",["126"],"import React, { useState, useContext, useEffect } from 'react'\nimport { UserContext } from '../context/UserContext'\n\nexport default function Signup({ history }) {\n\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [error, setError] = useState('')\n\n    const { user, setUser } = useContext(UserContext)\n    console.log(\"user\", user)\n\n    useEffect(() => {\n        if (user) {\n            history.push('/')\n        }\n    }, [user])\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        if (password === confirmPassword)\n            try {\n                const response = await fetch(\"http://localhost:1337/auth/local/register\", {\n                    method: 'POST',\n                    headers: {\n                        'Content-type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        username,\n                        email,\n                        password,\n                        confirmPassword\n                    })\n                })\n                const data = await response.json()\n                console.log(\"data\", data)\n\n                if (data.message) {\n                    setError(data.data[0].messages[0].message)\n                    return\n                }\n                setUser(data)\n\n            } catch (err) {\n                setError('Something Wrong ' + err)\n            }\n        else {\n            setError('Passwords do not match. Please try again.')\n        }\n    }\n\n    return (\n        <div className=\"signup\">\n            <div className=\"login uk-flex uk-flex-column uk-container\">\n                <form class=\"uk-form\" onSubmit={handleSubmit}>\n                    <fieldset data-uk-margin>\n                        <legend className=\"uk-text-lead\">Sign Up</legend>\n                        <div className=\"uk-form-row uk-flex uk-flex-center\">\n                            <div>\n                                <p className=\"uk-margin-large-right uk-flex-center uk-text-large\">\n                                    <label>Username</label></p>\n                                <input\n                                    type=\"text\"\n                                    value={username}\n                                    className=\"uk-form-width-large textbox\"\n                                    onChange={(event) => {\n                                        setError('')\n                                        setUsername(event.target.value)\n                                    }} />\n                                <p className=\"uk-margin-large-right uk-text-large\">\n                                    <label>Email</label></p>\n                                <input\n                                    className=\"uk-form-width-large textbox\"\n                                    type=\"email\"\n                                    value={email}\n                                    onChange={(event) => {\n                                        setError('')\n                                        setEmail(event.target.value)\n                                    }} />\n                                <p className=\"uk-margin-large-right uk-text-large\">\n                                    <label>Password</label> </p>\n                                <input\n                                    className=\"uk-form-width-large textbox\"\n                                    type=\"password\"\n                                    value={password}\n                                    onChange={(event) => {\n                                        setError('')\n                                        setPassword(event.target.value)\n                                    }} /><p className=\"uk-margin-large-right uk-text-large\">\n                                    <label>Confirm Password</label> </p>\n                                <input\n                                    className=\"uk-form-width-large textbox\"\n                                    type=\"password\"\n                                    value={confirmPassword}\n                                    onChange={(event) => {\n                                        setError('')\n                                        setConfirmPassword(event.target.value)\n                                    }} />\n                            </div>\n                        </div>\n                        <button class=\"uk-button uk-align-center\">Sign up</button>\n                    </fieldset>\n                </form>\n                {error && <p>{error}</p>}\n            </div>\n        </div>\n    )\n}\n","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\containers\\Login.js",["127","128"],"import React, { useState, useContext, useEffect } from 'react'\nimport { UserContext } from '../context/UserContext'\nimport index from '../index.css'\nexport default function Login({ history }) {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [error, setError] = useState('')\n\n    const { user, setUser } = useContext(UserContext)\n    console.log(\"user\", user)\n\n    useEffect(() => {\n        if (user) {\n            history.push('/')\n        }\n    }, [user])\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        try {\n            const response = await fetch(\"http://localhost:1337/auth/local\", {\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                    identifier: username,\n                    password\n                })\n            })\n            const data = await response.json()\n            console.log(\"data\", data)\n\n            if (data.message) {\n                setError(data.message[0].messages[0].message)\n                return\n            }\n            setUser(data)\n\n        } catch (err) {\n            setError('Something Wrong ' + err)\n        }\n    }\n\n    return (\n        <div className=\"login uk-flex uk-flex-column uk-container\">\n            <form class=\"uk-form\" onSubmit={handleSubmit}>\n                <fieldset data-uk-margin>\n                    <legend className=\"uk-text-lead\">Login</legend>\n                    <div className=\"uk-form-row uk-flex uk-flex-center \">\n                        <div>\n                            <p className=\"uk-margin-large-right uk-flex-center uk-text-large\">\n                                <label>Username</label></p>\n                            <input\n                                type=\"text\"\n                                value={username}\n                                className=\"uk-form-width-large textbox\"\n                                onChange={(event) => {\n                                    setError('')\n                                    setUsername(event.target.value)\n                                }} />\n                            <p className=\"uk-margin-large-right uk-text-large\">\n                                <label>Password</label> </p>\n                            <input\n                                className=\"uk-form-width-large textbox\"\n                                type=\"password\"\n                                value={password}\n                                onChange={(event) => {\n                                    setError('')\n                                    setPassword(event.target.value)\n                                }} />\n                        </div>\n                    </div>\n                    <button class=\"uk-button uk-align-center\">Login</button>\n                </fieldset>\n            </form>\n            {error && <p>{error}</p>}\n        </div>\n    )\n}\n","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\containers\\UserInfo.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\context\\UserContext.js",["129"],"import React, { createContext, useState } from 'react'\n\nexport const UserContext = createContext(null)\n\nexport default ({ children }) => {\n\n    const [user, setUser] = useState(null)\n\n    return (\n        <UserContext.Provider value={{ user, setUser }}>\n            {children}\n        </UserContext.Provider>\n    )\n}","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\theme\\light.js",["130"],"export default {\n    colors: {\n        background: \"white\",\n        textColor: \"#2d2d2d\",\n    }\n}","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\theme\\dark.js",["131"],"export default {\n    colors: {\n        background: \"#2d2d2d\",\n        textColor: \"white\",\n    }\n}","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\theme\\component\\Container.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\actions\\config_action.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\actions\\types.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\serviceWorker.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\reducers\\index.js",[],"F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\reducers\\config_reducer.js",["132"],"  \nimport {\n    DARK_MODE\n} from '../actions/types';\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case DARK_MODE:\n            return { ...state, darkMode: action.payload }\n        default:\n            return state;\n    }\n}","F:\\school\\TTP Bootcamp\\React-apps\\recipe-frontend\\src\\containers\\PostRecipe.js",["133","134","135"],{"ruleId":"136","severity":1,"message":"137","line":15,"column":13,"nodeType":"138","messageId":"139","endLine":15,"endColumn":26},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":94,"column":45,"nodeType":"146","endLine":94,"endColumn":84},{"ruleId":"144","severity":1,"message":"145","line":95,"column":45,"nodeType":"146","endLine":95,"endColumn":85},{"ruleId":"147","severity":1,"message":"148","line":10,"column":21,"nodeType":"146","endLine":14,"endColumn":23},{"ruleId":"149","severity":1,"message":"150","line":19,"column":8,"nodeType":"151","endLine":19,"endColumn":14,"suggestions":"152"},{"ruleId":"136","severity":1,"message":"153","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":13},{"ruleId":"149","severity":1,"message":"150","line":17,"column":8,"nodeType":"151","endLine":17,"endColumn":14,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":5,"column":1,"nodeType":"157","endLine":14,"endColumn":2},{"ruleId":"155","severity":1,"message":"158","line":1,"column":1,"nodeType":"157","endLine":6,"endColumn":2},{"ruleId":"155","severity":1,"message":"158","line":1,"column":1,"nodeType":"157","endLine":6,"endColumn":2},{"ruleId":"155","severity":1,"message":"159","line":6,"column":1,"nodeType":"157","endLine":13,"endColumn":2},{"ruleId":"136","severity":1,"message":"160","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":37},{"ruleId":"136","severity":1,"message":"161","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":21},{"ruleId":"162","severity":1,"message":"163","line":63,"column":80,"nodeType":"164","messageId":"165","endLine":63,"endColumn":82},"no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","no-native-reassign",["166"],"no-negated-in-lhs",["167"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["168"],"'index' is defined but never used.",["169"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","Unexpected default export of anonymous function","'useContext' is defined but never used.","'UserContext' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"170","fix":"172"},"Update the dependencies array to be: [history, user]",{"range":"173","text":"174"},{"range":"175","text":"174"},[586,592],"[history, user]",[511,517]]